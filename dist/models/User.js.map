{"version":3,"sources":["../../src/models/User.js"],"names":["gravatarUrl","require","schema","mongoose","Schema","email","type","String","required","lowercase","index","unique","name","phone","fb_url","bd_uni","undergradcgpa","Number","unitotal","univarbal","uniquant","uniawa","ieltstotal","ieltsreading","ieltswriting","ieltslistening","ieltsspeaking","toefltotal","toeflreading","toeflwriting","toefllistening","toeflspeaking","publication_number","job_experience","research_experience","applied_university","accepted_university","unitest","langtest","intjournal","intconference","natjournal","natconference","incoming_university","admission_in","major","research_area","financial_aid","bucket_list","passwordHash","confirmed","Boolean","default","confirmationToken","timestamps","methods","isValidPassword","password","bcrypt","compareSync","setPassword","hashSync","setConfirmationToken","generateJWT","generateConfirmationUrl","process","env","HOST","generateResetPasswordLink","generateResetPasswordToken","generatePhoto","size","jwt","sign","JWT_SECRET","_id","expiresIn","toAuthJSON","v","q","gretotal","tr","tl","ts","tw","ir","is","il","iw","toefl","ielts","parseInt","photo","token","plugin","uniqueValidator","message","model"],"mappings":"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","file":"User.js","sourcesContent":["import mongoose from \"mongoose\";\nimport bcrypt from \"bcrypt\";\nimport jwt from \"jsonwebtoken\";\nimport uniqueValidator from \"mongoose-unique-validator\";\nconst gravatarUrl = require('gravatar-url');\n// TODO: add uniqueness and email validations to email field\nconst schema = new mongoose.Schema(\n  {\n    email: {\n      type: String,\n      required: true,\n      lowercase: true,\n      index: true,\n      unique: true\n    },\n    name: {\n      type: String,\n      required: true\n    },\n    phone: {\n      type: String,\n    },\n    fb_url: {\n      type: String,\n    },\n    bd_uni: {\n      type: String,\n    },\n    undergradcgpa: {\n      type: Number,\n    },\n    unitotal: {\n      type: Number,\n    },\n    univarbal: {\n      type: Number,\n    },\n    uniquant: {\n      type: Number,\n    },\n    uniawa: {\n      type: Number,\n    },\n    ieltstotal: {\n      type: Number\n    },\n    ieltsreading: {\n      type: Number\n    },\n    ieltswriting: {\n      type: Number\n    },\n    ieltslistening: {\n      type: Number\n    },\n    ieltsspeaking: {\n      type: Number\n    },\n    toefltotal: {\n      type: Number\n    },\n    toeflreading: {\n      type: Number\n    },\n    toeflwriting: {\n      type: Number\n    },\n    toefllistening: {\n      type: Number\n    },\n    toeflspeaking: {\n      type: Number\n    },\n\n    publication_number: {\n      type: Number\n    },\n    job_experience: {\n      type: String\n    },\n    research_experience: {\n      type: String\n    },\n    applied_university: {\n      type: String\n    },\n    accepted_university: {\n      type: String\n    },\n\n    unitest: {\n      type: String\n    },\n    langtest: {\n      type: String\n    },\n    intjournal: {\n      type: Number\n    },\n\n    intconference: {\n      type: Number\n    },\n    natjournal: {\n      type: Number\n    },\n    natconference: {\n      type: Number\n    },\n\n    incoming_university: {\n      type: String\n    },\n    admission_in: {\n      type: String\n    },\n    major: {\n      type: String\n    },\n    research_area: {\n      type: String\n    },\n    financial_aid: {\n      type: [String]\n    },\n    bucket_list: [{ name: 'string' }],\n    passwordHash: { type: String, required: true },\n    confirmed: { type: Boolean, default: false },\n    confirmationToken: { type: String, default: \"\" },\n  },\n  { timestamps: true }\n);\nschema.methods.isValidPassword = function isValidPassword(password) {\n  return bcrypt.compareSync(password, this.passwordHash);\n};\n\nschema.methods.setPassword = function setPassword(password) {\n  this.passwordHash = bcrypt.hashSync(password, 10);\n};\n\nschema.methods.setConfirmationToken = function setConfirmationToken() {\n  this.confirmationToken = this.generateJWT();\n};\n\nschema.methods.generateConfirmationUrl = function generateConfirmationUrl() {\n  return `${process.env.HOST}/confirmation/${this.confirmationToken}`;\n};\n\nschema.methods.generateResetPasswordLink = function generateResetPasswordLink() {\n  return `${\n    process.env.HOST\n    }/reset_password/${this.generateResetPasswordToken()}`;\n};\nschema.methods.generatePhoto = function generatePhoto() {\n  return gravatarUrl(this.email, { size: 200 });\n}\nschema.methods.generateJWT = function generateJWT() {\n  return jwt.sign(\n    {\n      email: this.email,\n      name: this.name,\n      confirmed: this.confirmed\n    },\n    process.env.JWT_SECRET\n  );\n};\n\nschema.methods.generateResetPasswordToken = function generateResetPasswordToken() {\n  return jwt.sign(\n    {\n      _id: this._id\n    },\n    process.env.JWT_SECRET,\n    { expiresIn: \"1h\" }\n  );\n};\n\nschema.methods.toAuthJSON = function toAuthJSON() {\n  let v, q, gretotal, tr, tl, ts, tw, ir, is, il, iw, toefl, ielts;\n  q = this.uniquant || 0\n  v = this.univarbal || 0\n\n  tr = this.toeflreading || 0\n  tl = this.toefllistening || 0\n  ts = this.toeflspeaking || 0\n  tw = this.toeflwriting || 0\n\n  ir = this.ieltsreading || 0\n  il = this.ieltslistening || 0\n  is = this.ieltsspeaking || 0\n  iw = this.ieltswriting || 0\n\n  toefl = tr + tl + ts + tw;\n  ielts = ir + il + is + iw;\n  gretotal = parseInt(q) + parseInt(v)\n  return {\n    email: this.email,\n    confirmed: this.confirmed,\n    name: this.name,\n    photo: this.generatePhoto(),\n    phone: this.phone,\n    fb_url: this.fb_url,\n    bd_uni: this.bd_uni,\n    undergradcgpa: this.undergradcgpa,\n    unitest: this.unitest,\n    unitotal: gretotal,\n    univarbal: this.univarbal,\n    uniquant: this.uniquant,\n    uniawa: this.uniawa,\n    langtest: this.langtest,\n\n    toefltotal: toefl,\n    toeflreading: this.toeflreading,\n    toeflwriting: this.toeflwriting,\n    toefllistening: this.toefllistening,\n    toeflspeaking: this.toeflspeaking,\n\n    ieltstotal: ielts,\n    ieltsreading: this.ieltsreading,\n    ieltswriting: this.ieltswriting,\n    ieltslistening: this.ieltslistening,\n    ieltsspeaking: this.ieltsspeaking,\n\n    publication_number: this.intjournal + this.intconference + this.natjournal + this.natconference,\n    job_experience: this.job_experience,\n\n    bucket_list: this.bucket_list,\n\n    intjournal: this.intjournal,\n    intconference: this.intconference,\n    natjournal: this.natjournal,\n    natconference: this.natconference,\n    research_experience: this.research_experience,\n    applied_university: this.applied_university,\n    accepted_university: this.accepted_university,\n    incoming_university: this.incoming_university,\n    admission_in: this.admission_in,\n    major: this.major,\n    research_area: this.research_area,\n    financial_aid: this.financial_aid,\n    token: this.generateJWT()\n  };\n};\nschema.plugin(uniqueValidator, {\n  message: \"It is already taken, try another one.\"\n});\n\nexport default mongoose.model(\"User\", schema);\n"]}