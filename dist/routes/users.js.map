{"version":3,"sources":["../../src/routes/users.js"],"names":["router","express","Router","get","req","res","json","result","post","body","user","email","password","name","User","setPassword","setConfirmationToken","save","then","userRecord","toAuthJSON","catch","status","errors","err","authenticate","currentUser","patch","console","log","data","findOneAndUpdate","$set","new","message","value","$push","bucket_list","e","delete","$pull","member"],"mappings":"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","file":"users.js","sourcesContent":["import express from \"express\";\nimport User from \"../models/User\";\n\nimport parseErrors from \"../utils/parseErrors\";\nimport { sendConfirmationEmail } from \"../mailer\";\nimport authenticate from \"../middlewares/authenticate\";\n\nconst router = express.Router();\n\nrouter.get(\"/sd\", (req, res) => {\n  // User.aggregate.sortByCount('users').then((err, user) => {\n  //   if (!err) {\n  //     res.json({\n  //       result: user\n  //     });\n  //   }\n\n  // })\n\n  res.json({\n    result: 'worng'\n  });\n\n});\n\nrouter.post(\"/\", (req, res) => {\n  const { email, password, name } = req.body.user;\n  const user = new User({ email, name });\n  user.setPassword(password);\n  user.setConfirmationToken();\n  user\n    .save()\n    .then(userRecord => {\n      sendConfirmationEmail(userRecord);\n      res.json({ user: userRecord.toAuthJSON() });\n    })\n    .catch(err => res.status(400).json({ errors: err }));\n});\n\nrouter.get(\"/current_user\", authenticate, (req, res) => {\n  if (!!req.currentUser) {\n    res.json({\n      user: req.currentUser\n    });\n  } else {\n    res.json({\n      errors: 'No User found',\n    });\n  }\n\n});\n\nrouter.patch(\"/current_user\", authenticate, (req, res) => {\n  console.log('dukse!')\n  let email = req.currentUser.email;\n  let data = req.body.data\n\n  User.findOneAndUpdate({ email: email }, { $set: data }, { new: true }).then((user) => {\n    console.log('CurrentUSer', req.currentUser)\n  })\n\n  res.json({\n    message: 'Successfully Updated!'\n  });\n});\n\nrouter.post(\"/uni_bucket\", authenticate, (req, res) => {\n  let email = req.currentUser.email;\n  const value = req.body.data;\n\n  try {\n    User.findOneAndUpdate({ email: email }, { $push: { bucket_list: { name: value } } }).then((user) => {\n      res.json(user)\n    })\n  } catch (e) {\n    res.status(500).json(e)\n  }\n});\n\nrouter.delete(\"/uni_bucket\", authenticate, (req, res) => {\n  let email = req.currentUser.email;\n  const value = req.body.data;\n  console.log(value)\n  try {\n    User.findOneAndUpdate({ email: email }, { $pull: { bucket_list: { name: value } } }).then((member) => {\n      // console.log(member)\n      res.json(member)\n    })\n  } catch (e) {\n    res.status(500).json(e)\n  }\n});\n\n\nexport default router;\n"]}